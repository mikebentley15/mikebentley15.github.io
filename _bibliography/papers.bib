---
---

@string{aps = {American Physical Society,}}

@article{Ahn2019_JHPCA,
  bibtex_show = {true},
  pdf = {Ahn2019_JHPCA.pdf},
  abbr = {JHPCA},
  title = {{{PRUNERS}}: Providing Reproducibility for Uncovering Non-Deterministic Errors in Runs on Supercomputers},
  author = {Sato, Kento and Laguna, Ignacio and Lee, Gregory L. and Schulz, Martin and Chambreau, Christopher M. and Atzeni, Simone and Bentley, Michael and Gopalakrishnan, Ganesh and Rakamaric, Zvonimir and Sawaya, Geof and Protze, Joachim and Ahn, Dong},
  year = {2019},
  month = sep,
  journal = {The International Journal of High Performance Computing Applications},
  volume = {33},
  number = {5},
  pages = {777--783},
  url = {https://doi.org/10.1177/1094342019834621},
  abstract = {Large scientific simulations must be able to achieve the full-system potential of supercomputers. When they tap into high-performance features, however, a phenomenon known as non-determinism may be introduced in their program execution, which significantly hampers application development. Pruners is a new toolset to detect and remedy non-deterministic bugs and errors in large parallel applications. To show the capabilities of Pruners for large application development, we also demonstrate their early usage on real-world production applications.},
}

@article{Bentley2021_arXiv,
  pdf = {Bentley2022_JMRR.pdf},
  abbr = {JMRR},
  selected = {true},
  arxiv = {2101.02246},
  title = {Safer Motion Planning of Steerable Needles via a Shaft-to-Tissue Force Model},
  author = {Bentley, Michael and Rucker, Caleb and Reddy, Chakravarthy and Salzman, Oren and Kuntz, Alan},
  year = {2022},
  journal = {Journal of Medical Robotics Research <span style="font-weight: bold;">(under review)</span>},
  month = nov,
  number = {2101.02246},
  eprint = {2101.02246},
  eprinttype = {arxiv},
  primaryclass = {cs},
  doi = {10.48550/arXiv.2101.02246},
  url = {https://arxiv.org/abs/2101.02246},
  abstract = {Steerable needles are capable of accurately targeting difficult-to-reach clinical sites in the body.  By bending around sensitive anatomical structures, steerable needles have the potential to reduce the invasiveness of many medical procedures.  However, inserting these needles with curved trajectories increases the risk of tissue damage due to large forces being exerted on the surrounding tissue by the needle's shaft, potentially resulting in shearing through tissue.  Such shearing can cause significant damage to surrounding tissue, potentially worsening patient outcomes.  In this work, we derive a tissue and needle force model based on a Cosserat string formulation, which describes the normal forces and frictional forces along the shaft as a function of the planned needle path, friction parameters, and tip piercing force.  We then incorporate this force model as a cost function in an asymptotically near-optimal motion planner and demonstrate the ability to plan motions that consider the tissue normal forces from the needle shaft during planning in a simulated steering environment and a simulated lung tumor biopsy scenario.  We propose this new force model and associated cost function as a safer and more clinically relevant metric than those currently used in motion planning for steerable needles.  By planning motions for the needle that aim to minimize the tissue normal force explicitly, our method plans needle paths that reduce the risk of significant tissue damage while still reaching desired targets in the body.},
  archiveprefix = {arXiv},
}

@article{Bentley2022_IA,
  bibtex_show={true},
  pdf = {Bentley2022_IA.pdf},
  abbr = {IEEE Access},
  selected = {true},
  arxiv = {2211.16452},
  code = {https://github.com/Utah-ARMLab/interactive-rate-tendons.git},
  website = {https://sites.google.com/gcloud.utah.edu/armlab-tendon-planning},
  title = {Interactive-Rate Supervisory Control for Arbitrarily-Routed Multitendon Robots via Motion Planning},
  author = {Bentley, Michael and Rucker, Caleb and Kuntz, Alan},
  year = {2022},
  month = jul,
  journal = {IEEE Access},
  volume = {10},
  pages = {80999--81019},
  issn = {2169-3536},
  doi = {10.1109/ACCESS.2022.3194515},
  award = {2022 IEEE Access Best Video Award (Part 1)},
  abstract = {Tendon-driven robots, where one or more tendons under tension bend and manipulate a flexible backbone, can improve minimally invasive surgeries involving difficult-to-reach regions in the human body. Planning motions safely within constrained anatomical environments requires accuracy and efficiency in shape estimation and collision checking. Tendon robots that employ arbitrarily-routed tendons can achieve complex and interesting shapes, enabling them to travel to difficult-to-reach anatomical regions. Arbitrarily-routed tendon-driven robots have unintuitive nonlinear kinematics. Therefore, we envision clinicians leveraging an assistive interactive-rate motion planner to automatically generate collision-free trajectories to clinician-specified destinations during minimally-invasive surgical procedures. Standard motion-planning techniques cannot achieve interactive-rate motion planning with the current expensive tendon robot kinematic models. In this work, we present a 3-phase motion-planning system for arbitrarily-routed tendon-driven robots with a Precompute phase, a Load phase, and a Supervisory Control phase. Our system achieves an interactive rate by developing a fast kinematic model (over 1,000 times faster than current models), a fast voxel collision method (27.6 times faster than standard methods), and leveraging a precomputed roadmap of the entire robot workspace with pre-voxelized vertices and edges. In simulated experiments, we show that our motion-planning method achieves high tip-position accuracy and generates plans at 14.8 Hz on average in a segmented collapsed lung pleural space anatomical environment. Our results show that our method is 17,700 times faster than popular off-the-shelf motion planning algorithms with standard FK and collision detection approaches. Our open-source code is available online.},
}

@inproceedings{Huang2021_ISMR,
  bibtex_show={true},
  pdf = {Huang2021_ISMR.pdf},
  abbr = {ISMR},
  selected = {true},
  arxiv = {2110.07789},
  award = {Best Paper - Finalist, Best Student Paper - Finalist},
  title = {Toward Learning Context-Dependent Tasks from Demonstration for Tendon-Driven Surgical Robots},
  booktitle = {International Symposium on Medical Robotics ({{ISMR}})},
  author = {Huang, Yixuan and Bentley, Michael and Hermans, Tucker and Kuntz, Alan},
  year = {2021},
  month = nov,
  address = {{Atlanta, GA, USA}},
  doi = {10.1109/ISMR48346.2021.9661534},
  url = {https://doi.org/10.1109/ISMR48346.2021.9661534},
  abstract = {Tendon-driven robots, a type of continuum robot, have the potential to reduce the invasiveness of surgery by enabling access to difficult-to-reach anatomical targets. In the future, the automation of surgical tasks for these robots may help reduce surgeon strain in the face of a rapidly growing population. However, directly encoding surgical tasks and their associated context for these robots is infeasible. In this work we take steps toward a system that is able to learn to successfully perform context-dependent surgical tasks by learning directly from a set of expert demonstrations. We present three models trained on the demonstrations conditioned on a vector encoding the context of the demonstration. We then use these models to plan and execute motions for the tendon-driven robot similar to the demonstrations for novel context not seen in the training set. We demonstrate the efficacy of our method on three surgery-inspired tasks.},
}

@article{Ahn2021_CACM,
  bibtex_show = {true},
  pdf = {Ahn2021_CACM.pdf},
  abbr = {CACM},
  title = {Keeping Science on Keel When Software Moves},
  author = {Ahn, Dong H. and Baker, Allison H. and Bentley, Michael and Briggs, Ian and Gopalakrishnan, Ganesh and Hammerling, Dorit M. and Laguna, Ignacio and Lee, Gregory L. and Milroy, Daniel J. and Vertenstein, Mariana},
  year = {2021},
  month = jan,
  journal = {Communications of the ACM},
  volume = {64},
  number = {2},
  pages = {66--74},
  issn = {0001-0782},
  doi = {10.1145/3382037},
  url = {https://doi.org/10.1145/3382037},
  abstract = {An approach to reproducibility problems related to porting software across machines and compilers.},
}

@inproceedings{Jacobson2022_TestVis,
  bibtex_show={true},
  abbr = {Correctness},
  pdf = {Jacobson2022_TestVis.pdf},
  
  title = {{{FLoAT}} : Framework for Workflow Analysis and Transformation},
  shorttitle = {{{FLoAT}}},
  author = {Jacobson, John and Bentley, Michael and Gopalakrishnan, Ganesh and Ahn, Dong and Lee, Gregory},
  year = {2022},
  month = oct,
  journal = {International Workshop on Software Correctness for HPC Applications},
  booktitle = {International Workshop on Visualization in Testing of Hardware, Software, and Manufacturing (TestVis)},
  url = {https://doi.org/10.1109/TestVis57757.2022.00009},
  doi = {10.1109/TestVis57757.2022.00009},
  abstract = {New abstractions and frameworks are born when one creates hard-coded solutions to important tasks, regardless of whether they scale or result in software that can be meaningfully released. This paper describes our experience creating such a light-weight framework out of a previous tool effort FLiT for detecting compiler-induced numerical variability. The resulting framework FLOAT has already helped us better understand and fix performance bugs in FLiT. Our design of FLOAT and the ways in which we anticipate it enabling the adoption and re-purposing of FLiT, though likely not exhaustive, are described. We also express our views on the appropriate scope of such an approach, especially given that variations of compilation, linking, and execution abound, and specializing in that domain may be advantageous in the long-term as opposed to investing in an overly generalized paradigm.},
  langid = {english},
}

@inproceedings{Bentley2019_HPDC,
  bibtex_show = {true},
  pdf = {Bentley2019_HPDC.pdf},
  abbr = {HPDC},
  selected = {true},
  arxiv = {1811.05618},
  code = {https://github.com/PRUNERS/FLiT.git},
  website = {https://pruners.github.io/flit/},
  poster = {https://pruners.github.io/img/2019-06-hpdc-flit-poster.pdf},
  title = {Multi-Level Analysis of Compiler-Induced Variability and Performance Tradeoffs},
  booktitle = {The International Symposium on High-Performance Parallel and Distributed Computing},
  author = {Bentley, Michael and Briggs, Ian and Gopalakrishnan, Ganesh and Ahn, Dong H. and Laguna, Ignacio and Lee, Gregory L. and Jones, Holger E.},
  year = {2019},
  month = jun,
  series = {{{HPDC}} '19},
  pages = {61--72},
  publisher = {{Association for Computing Machinery}},
  address = {{Phoenix, AZ, USA}},
  doi = {10.1145/3307681.3325960},
  url = {https://doi.org/10.1145/3307681.3325960},
}

@inproceedings{Sawaya2017_IISWC,
  bibtex_show={true},
  abbr = {IISWC},
  pdf = {Sawaya2017_IISWC.pdf},
  title = {{{FLiT}}: Cross-Platform Floating-Point Result-Consistency Tester and Workload},
  shorttitle = {{{FLiT}}},
  booktitle = {The {{IEEE}} International Symposium on Workload Characterization ({{IISWC}})},
  author = {Sawaya, Geof and Bentley, Michael and Briggs, Ian and Gopalakrishnan, Ganesh and Ahn, Dong H.},
  year = {2017},
  month = oct,
  pages = {229--238},
  doi = {10.1109/IISWC.2017.8167780},
  abstract = {Understanding the extent to which computational results can change across platforms, compilers, and compiler flags can go a long way toward supporting reproducible experiments. In this work, we offer the first automated testing aid called FLiT (Floating-point Litmus Tester) that can show how much these results can vary for any user-given collection of computational kernels. Our approach is to take a collection of these kernels, disperse them across a collection of compute nodes (each with a different architecture), have them compiled and run, and bring the results to a central SQL database for deeper analysis. Properly conducting these activities requires a careful selection (or design) of these kernels, input generation methods for them, and the ability to interpret the results in meaningful ways. The results in this paper are meant to inform two different communities: (a) those interested in seeking higher performance by considering ``IEEE unsafe'' optimizations, but then want to understand how much result variability to expect, and (b) those interested in standardizing compiler flags and their meanings, so that one may safely port code across generations of compilers and architectures. By releasing FLiT, we have also opened up the possibility of all HPC developers using it as a common resource as well as contributing back interesting test kernels as well as best practices, thus extending the floating-point result-consistency workload we contribute. This is the first such workload and result-consistency tester underlying floating-point reproducibility of which we are aware.},
}
